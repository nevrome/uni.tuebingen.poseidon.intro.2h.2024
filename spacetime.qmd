---
title: "About"
editor_options: 
  chunk_output_type: console
execute: 
  eval: false
engine: knitr
shift-heading-level-by: 1
---

# Working with .janno context information in R

For data analysis and visualization an R-based workflow may be helpful. This is especially relevant if we want to incorporate spatial and temporal information.

## Loading an .janno file into R

We previously prepared the PCA dataset and we can load it again into an R environment.

```{r}
pca_out <- readRDS("scratch/pca_out2.rds")
```

This result dataset lacks all context information for the individual samples, which renders it really difficult to make sense of the PCA plot without prior knowledge. We do have plenty of context information, though, in the .janno file of the `iceWithRefSmall` package we prepared for the PCA in the first place. How do we access this?

As the .janno file is a simple .tsv file, we can easily read it into R, for example with `readr::read_tsv()` into a generic `tibble`. The Poseidon ecosystem includes an R package `janno` to read .janno files into a more specific `janno` data structure with some additional features.

```{r}
ref_janno <- janno::read_janno("scratch/iceWithRefSmall")
```

`janno::read_janno()` also applies a structural validity check to the input, transforms the columns to the correct data type for specified .janno columns and correctly detects list columns. At the same time the `janno` S3 class is derived from tibble and thus fully interoperable with the tidyverse.

With this information ready we can easily enrich our PCA plot to make it more readable.

```{r}
pca_with_context <- dplyr::bind_cols(
  pca_out$pca.sample_coordinates,
  group = unlist(ref_janno$Group_Name)
)
```

```{r}
library(magrittr)
library(ggplot2)

p <- pca_with_context %>%
  dplyr::mutate(group = dplyr::case_match(
    group,
    c("iceG", "French", "Syrian", "Sardinian") ~ group,
    .default = NA
  )) %>%
  dplyr::arrange(!is.na(group), group) %>%
  ggplot() +
  geom_point(
    aes(x = PC1, y = PC2, colour = group)
  ) +
  scale_y_reverse() +
  coord_fixed() +
  theme(legend.position = "bottom")
```

```{r, echo=FALSE}
ggsave(
  "img/pca2.png",
  plot = p
)
```

![](img/pca2.png)

## Adding new information to the .janno file

Now what about our own sample? As a first step we add the new information we received from Prof. P. to our Poseidon package `ice`. We do so by editing the .janno file at `ice/ice.janno`.

Starting from

::: {.table-responsive}

|Poseidon_ID|Genetic_Sex|Group_Name|Latitude|Longitude|
|-----------|-----------|----------|--------|---------|
|ice        |M          |iceG      |46.77   |10.83    |

:::

we add three additional columns as defined in the documentation here.

::: {.table-responsive}

|Date_Type  |Date_C14_Uncal_BP|Date_C14_Uncal_BP_Err|
|-----------|-----------------|---------------------|
|C14        |4555             |34                   |

:::

As we want to work particularly neatly we document this change to the package in a changelog, which we add to the package in the form of a `CHANGELOG.md` file.

```{filename="CHANGELOG.md"}
- V 0.2.0: Added a radiocarbon date for the ice sample.
```

We also update the package version number in our `POSEIDON.yml` file and link the changelog file there:

```{filename="POSEIDON.yml"}
poseidonVersion: 2.7.1
title: ice
packageVersion: 0.2.0
lastModified: 2024-01-24
...
changelogFile: CHANGELOG.md
```

After implementing the change we should again check the structural validity of the package with `trident validate`.

```{bash}
trident validate -d ice
```

## Using spatial and temporal 

```{r}
library(magrittr)
library(ggplot2)

my_janno <- janno::read_janno("scratch/data/2015_AllentoftNature-2.1.1/2015_AllentoftNature.janno")

my_janno_age <- my_janno %>% janno::process_age()

my_janno_age %>%
  dplyr::select(Poseidon_ID, Date_BC_AD_Median, Date_BC_AD_Sample) %>%
  dplyr::arrange(Date_BC_AD_Median) %>%
  dplyr::mutate(Poseidon_ID = factor(Poseidon_ID, levels = Poseidon_ID)) %>%
  tidyr::unnest(cols = Date_BC_AD_Sample) %>%
  ggplot() +
  geom_violin(aes(x = Poseidon_ID, y = Date_BC_AD_Sample))
```

