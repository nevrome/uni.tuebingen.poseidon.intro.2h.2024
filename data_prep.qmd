---
editor_options: 
  chunk_output_type: inline
execute: 
  eval: false
engine: knitr
shift-heading-level-by: 1
---

# Preparing a Poseidon package

As a first step of our analysis we should lay some groundwork and transform our research data into a tidy and interoperable data structure.

## Creating a working space

We're going to need some scratch space for this analysis, so we create a new directory `scratch`.

```{bash}
mkdir scratch
cd scratch
```

We then copy the data we received from Prof. P. into a directory `scratch/iceGeno`.

## Installing trident

As we want to use Poseidon for this analysis, we have to install its main software tool: [`trident`](https://www.poseidon-adna.org/#/trident). On Linux we can simply install it on the command line.

```{bash}
# download the current stable release binary
wget https://github.com/poseidon-framework/poseidon-hs/releases/latest/download/trident-Linux
# rename it to simply trident
mv trident-Linux trident
# make it executable
chmod +x trident
# run it to test if it is working
./trident -h
```

With `trident` ready and running we can turn to the data.

::: {.callout-note}
`trident` is also available for Windows and macOS, but security features of these operating systems complicate the installation. If you trust trident then you can turn these protections off and run the executable just as on Linux.
:::

## Turning the data into a Poseidon package

At the moment we only have the Eigenstrat data as provided by Prof. P.. To incorporate context information, for example the coordinates we received from him, we can create a Poseidon package around it.

::: {.callout-note}
This step is not absolutely necessary to use `trident`. `trident` supports direct handling of genotype data without a Poseidon package with the `-p`/`--genoOne` flag for unpackaged in- and the `--onlyGeno` flag for unpackaged output. You can still profit from `trident`'s convenient subsetting and merging abilities, even if you do not want to use any other Poseidon features.
:::

We create the package with `trident`'s [`init`](https://www.poseidon-adna.org/#/trident?id=init-command) subcommand, which wraps genotype data in a Poseidon package.

By running

```{bash}
./trident init \
  -p iceGeno/ice.geno \
  -o ice
```

:::: {.columns}

::: {.column width="40%"}
we turn

```
iceGeno
├── ice.geno
├── ice.ind
└── ice.snp
```
:::

::: {.column width="60%"}
into

```
ice
├── ice.bib
├── ice.geno
├── ice.ind
├── ice.janno
├── ice.snp
└── POSEIDON.yml
```
:::

::::

The `POSEIDON.yml` defines the package. `init` returns a technically valid template, which we can simplify for now.

```{filename="POSEIDON.yml (automatically generated)"}
poseidonVersion: 2.7.1
title: ice
description: Empty package template. Please add a description
contributor:
- name: Josiah Carberry
  email: carberry@brown.edu
  orcid: 0000-0002-1825-0097
packageVersion: 0.1.0
lastModified: 2024-01-24
genotypeData:
  format: EIGENSTRAT
  genoFile: ice.geno
  snpFile: ice.snp
  indFile: ice.ind
  snpSet: Other
jannoFile: ice.janno
bibFile: ice.bib
```

```{filename="POSEIDON.yml (simplified)"}
poseidonVersion: 2.7.1
title: ice
packageVersion: 0.1.0
lastModified: 2024-01-24
genotypeData:
  format: EIGENSTRAT
  genoFile: ice.geno
  snpFile: ice.snp
  indFile: ice.ind
  snpSet: 1240K
jannoFile: ice.janno
```

We can delete the `.bib` file, as we have no literature references for our new sample yet.

The generated `.janno` file features a lot of empty columns. We can delete them and only keep and fill the ones for which we have information: `Latitude` and `Longitude`.

::: {.table-responsive}
|Poseidon_ID|Genetic_Sex|Group_Name|Alternative_IDs|Relation_To|Relation_Degree|Relation_Type|Relation_Note|Collection_ID|Country|Country_ISO|Location|Site|Latitude|Longitude|Date_Type|Date_C14_Labnr|Date_C14_Uncal_BP|Date_C14_Uncal_BP_Err|Date_BC_AD_Start|Date_BC_AD_Median|Date_BC_AD_Stop|Date_Note|MT_Haplogroup|Y_Haplogroup|Source_Tissue|Nr_Libraries|Library_Names|Capture_Type|UDG|Library_Built|Genotype_Ploidy|Data_Preparation_Pipeline_URL|Endogenous|Nr_SNPs|Coverage_on_Target_SNPs|Damage|Contamination|Contamination_Err|Contamination_Meas|Contamination_Note|Genetic_Source_Accession_IDs|Primary_Contact|Publication|Note|Keywords|
|-----------|-----------|----------|---------------|-----------|---------------|-------------|-------------|-------------|-------|-----------|--------|----|--------|---------|---------|--------------|-----------------|---------------------|----------------|-----------------|---------------|---------|-------------|------------|-------------|------------|-------------|------------|---|-------------|---------------|-----------------------------|----------|-------|-----------------------|------|-------------|-----------------|------------------|------------------|----------------------------|---------------|-----------|----|--------|
|ice        |M          |iceG      |n/a            |n/a        |n/a            |n/a          |n/a          |n/a          |n/a    |n/a        |n/a     |n/a |n/a     |n/a      |n/a      |n/a           |n/a              |n/a                  |n/a             |n/a              |n/a            |n/a      |n/a          |n/a         |n/a          |n/a         |n/a          |n/a         |n/a|n/a          |n/a            |n/a                          |n/a       |n/a    |n/a                    |n/a   |n/a          |n/a              |n/a               |n/a               |n/a                         |n/a            |n/a        |n/a |n/a     |
:::

::: {.table-responsive}
|Poseidon_ID|Genetic_Sex|Group_Name|Latitude|Longitude|
|-----------|-----------|----------|--------|---------|
|ice        |M          |iceG      |46.77   |10.83    |
:::

## Validating our Poseidon package

After all these manual changes we should confirm that the package is still structurally valid and computer-readable.

`trident` has a special subcommand for that: [`validate`](https://www.poseidon-adna.org/#/trident?id=validate-command).

```{bash}
./trident validate -d ice
```

If we did everything right, then the validation should pass. Otherwise we should go back to the package an fix it. `trident` only reads valid packages. If we encounter an issue we may get more information about it by running trident with the `--debug` flag.

::: {.callout-note}
`validate` supports not just the validation of whole packages, but also of individual `.janno`, `.geno` or `.bib` files. It can also ignore the genotype data in a package with `--ignoreGeno`, or parse the whole genotype data files with `--fullGeno`. As a default it attempts to parse the first 100 SNPs.
:::

***

::: {.callout-tip}
## Learn more about...
- The structure of the Poseidon package: [The Poseidon package](https://www.poseidon-adna.org/#/standard)
- The `trident` software tool: [trident CLI software](https://www.poseidon-adna.org/#/trident)
:::
